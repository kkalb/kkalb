{
    "total_count": 5336,
    "incomplete_results": false,
    "items": [
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13627",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13627/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13627/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13627/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13627",
            "id": 2328781667,
            "node_id": "I_kwDOABLXGs6KzmNj",
            "number": 13627,
            "title": "`Mix.install` fails with `MatchError` when specifying a `path` dependency with some other dependency",
            "user": {
                "login": "0x009922",
                "id": 43530070,
                "node_id": "MDQ6VXNlcjQzNTMwMDcw",
                "avatar_url": "https://avatars.githubusercontent.com/u/43530070?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/0x009922",
                "html_url": "https://github.com/0x009922",
                "followers_url": "https://api.github.com/users/0x009922/followers",
                "following_url": "https://api.github.com/users/0x009922/following{/other_user}",
                "gists_url": "https://api.github.com/users/0x009922/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/0x009922/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/0x009922/subscriptions",
                "organizations_url": "https://api.github.com/users/0x009922/orgs",
                "repos_url": "https://api.github.com/users/0x009922/repos",
                "events_url": "https://api.github.com/users/0x009922/events{/privacy}",
                "received_events_url": "https://api.github.com/users/0x009922/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 484973577,
                    "node_id": "MDU6TGFiZWw0ODQ5NzM1Nzc=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Needs%20more%20info",
                    "name": "Note:Needs more info",
                    "color": "d93f0b",
                    "default": false,
                    "description": null
                }
            ],
            "state": "open",
            "locked": false,
            "assignee": {
                "login": "ericmj",
                "id": 316890,
                "node_id": "MDQ6VXNlcjMxNjg5MA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/316890?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ericmj",
                "html_url": "https://github.com/ericmj",
                "followers_url": "https://api.github.com/users/ericmj/followers",
                "following_url": "https://api.github.com/users/ericmj/following{/other_user}",
                "gists_url": "https://api.github.com/users/ericmj/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ericmj/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ericmj/subscriptions",
                "organizations_url": "https://api.github.com/users/ericmj/orgs",
                "repos_url": "https://api.github.com/users/ericmj/repos",
                "events_url": "https://api.github.com/users/ericmj/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ericmj/received_events",
                "type": "User",
                "site_admin": false
            },
            "assignees": [
                {
                    "login": "ericmj",
                    "id": 316890,
                    "node_id": "MDQ6VXNlcjMxNjg5MA==",
                    "avatar_url": "https://avatars.githubusercontent.com/u/316890?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/ericmj",
                    "html_url": "https://github.com/ericmj",
                    "followers_url": "https://api.github.com/users/ericmj/followers",
                    "following_url": "https://api.github.com/users/ericmj/following{/other_user}",
                    "gists_url": "https://api.github.com/users/ericmj/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/ericmj/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/ericmj/subscriptions",
                    "organizations_url": "https://api.github.com/users/ericmj/orgs",
                    "repos_url": "https://api.github.com/users/ericmj/repos",
                    "events_url": "https://api.github.com/users/ericmj/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/ericmj/received_events",
                    "type": "User",
                    "site_admin": false
                }
            ],
            "milestone": null,
            "comments": 5,
            "created_at": "2024-06-01T00:52:34Z",
            "updated_at": "2024-06-02T13:05:22Z",
            "closed_at": null,
            "author_association": "NONE",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\r\n\r\nErlang/OTP 26 [erts-14.2.5] [source] [64-bit] [smp:10:10] [ds:10:10:10] [async-threads:1] [jit] [dtrace]\r\n\r\nElixir 1.16.3 (compiled with Erlang/OTP 26)\r\n\r\n### Operating system\r\n\r\nmacOS Sonoma 14.5\r\n\r\n### Current behavior\r\n\r\nSteps to reproduce:\r\n\r\n1. Create new Mix project: `mix new sample_project`\r\n2. Add a Hex dependency to it, e.g. `{:nimble_parsec, \"~> 1.1.1\"}`\r\n3. Run `Mix.install` using this project as a path dependency. For example, in IEx session:\r\n\r\n```elixir\r\nMix.install([{:sample_project, path: \"./sample_project\"}])\r\n```\r\n\r\nYou can also add this dependency in any other way (from other project, or from Livebook, as in my case) - it doesn't matter until it has `path`.\r\n\r\nIt fails with the following error:\r\n\r\n```\r\nResolving Hex dependencies...\r\n** (MatchError) no match of right hand side value: :error\r\n    (hex 2.1.1) lib/hex/solver/package_lister.ex:47: anonymous fn/4 in Hex.Solver.PackageLister.dependencies_as_incompatibilities/4\r\n    (elixir 1.16.3) lib/enum.ex:1700: Enum.\"-map/2-lists^map/1-1-\"/2\r\n    (hex 2.1.1) lib/hex/solver/package_lister.ex:46: Hex.Solver.PackageLister.dependencies_as_incompatibilities/4\r\n    (hex 2.1.1) lib/hex/solver/solver.ex:123: Hex.Solver.Solver.choose_package_version/1\r\n    (hex 2.1.1) lib/hex/solver/solver.ex:25: Hex.Solver.Solver.solve/2\r\n    (hex 2.1.1) lib/hex/solver.ex:64: Hex.Solver.run/5\r\n    (hex 2.1.1) lib/hex/remote_converger.ex:69: Hex.RemoteConverger.run_solver/5\r\n    iex:1: (file)\r\n```\r\n\r\nI noticed that this error doesn't occur if `sample_project` doesn't have any dependencies.\r\n\r\nSome context: initially tried to use a local `path` dependency in my Livebook, but faced this cryptic error =(\r\n\r\n**upd:** got the same error (in Livebook) when I added same dependency via remote `git` url.\r\n\r\n### Expected behavior\r\n\r\n_At least_ expected to get an error with an explanation of what I did wrong and an actionable way to fix it.\r\n\r\nIdeally, expected this thing to just work (as it often does in Elixir!)",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13627/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13627/timeline",
            "performed_via_github_app": null,
            "state_reason": null,
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13624",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13624/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13624/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13624/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13624",
            "id": 2328135828,
            "node_id": "I_kwDOABLXGs6KxIiU",
            "number": 13624,
            "title": "ExUnit only formats the common parts between left and right side of assertion ",
            "user": {
                "login": "dkuku",
                "id": 904179,
                "node_id": "MDQ6VXNlcjkwNDE3OQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/904179?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dkuku",
                "html_url": "https://github.com/dkuku",
                "followers_url": "https://api.github.com/users/dkuku/followers",
                "following_url": "https://api.github.com/users/dkuku/following{/other_user}",
                "gists_url": "https://api.github.com/users/dkuku/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dkuku/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dkuku/subscriptions",
                "organizations_url": "https://api.github.com/users/dkuku/orgs",
                "repos_url": "https://api.github.com/users/dkuku/repos",
                "events_url": "https://api.github.com/users/dkuku/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dkuku/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 207979,
                    "node_id": "MDU6TGFiZWwyMDc5Nzk=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore",
                    "name": "Kind:Chore",
                    "color": "fbca04",
                    "default": false,
                    "description": null
                },
                {
                    "id": 109230298,
                    "node_id": "MDU6TGFiZWwxMDkyMzAyOTg=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:ExUnit",
                    "name": "App:ExUnit",
                    "color": "CCCCCC",
                    "default": false,
                    "description": null
                }
            ],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2024-05-31T15:52:41Z",
            "updated_at": "2024-05-31T20:38:59Z",
            "closed_at": null,
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nElixir 1.17.0-rc.0 (a2600ea) (compiled with Erlang/OTP 27)\n\n### Operating system\n\nLinux\n\n### Current behavior\n\nWith such minimal test:\r\n```\r\n     @date DateTime.utc_now() |> Map.from_struct()                                                                                              \r\n                                                                                                                                                                                                         \r\n     test \"greets the world\" do                                                                                                                                                                         \r\n       assert [@date] == [@date, @date]                                                                                                                                                                 \r\n     end      \r\n```\r\nThe result has only formatted the common parts of both sides of the comparison. \r\nThe difference is unformatted, but this is the one that I'm as an user am most interested in. It looks worse when the data structure has more keys than on the screenshot.\r\n![image](https://github.com/elixir-lang/elixir/assets/904179/2aebb58a-0a4f-45aa-bcf1-cfe94d45efb6)\r\n\n\n### Expected behavior\n\nThe differences between both sides are formatted.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13624/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13624/timeline",
            "performed_via_github_app": null,
            "state_reason": null,
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13622",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13622/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13622/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13622/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13622",
            "id": 2326071704,
            "node_id": "I_kwDOABLXGs6KpQmY",
            "number": 13622,
            "title": "Add an API to type check code to be evaluated",
            "user": {
                "login": "josevalim",
                "id": 9582,
                "node_id": "MDQ6VXNlcjk1ODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/josevalim",
                "html_url": "https://github.com/josevalim",
                "followers_url": "https://api.github.com/users/josevalim/followers",
                "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
                "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
                "organizations_url": "https://api.github.com/users/josevalim/orgs",
                "repos_url": "https://api.github.com/users/josevalim/repos",
                "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
                "received_events_url": "https://api.github.com/users/josevalim/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 207975,
                    "node_id": "MDU6TGFiZWwyMDc5NzU=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature",
                    "name": "Kind:Feature",
                    "color": "0052cc",
                    "default": false,
                    "description": null
                },
                {
                    "id": 2660471585,
                    "node_id": "MDU6TGFiZWwyNjYwNDcxNTg1",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir%20(checker)",
                    "name": "App:Elixir (checker)",
                    "color": "CCCCCC",
                    "default": false,
                    "description": ""
                }
            ],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2024-05-30T16:20:35Z",
            "updated_at": "2024-05-30T16:20:36Z",
            "closed_at": null,
            "author_association": "MEMBER",
            "active_lock_reason": null,
            "body": "Either a new function in Code or an option to `eval_quoted` and friends. We will need to be able to infer types from bindings. We can use it in IEx and Livebook.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13622/reactions",
                "total_count": 1,
                "+1": 1,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13622/timeline",
            "performed_via_github_app": null,
            "state_reason": null,
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13617",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13617/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13617/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13617/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13617",
            "id": 2322653945,
            "node_id": "I_kwDOABLXGs6KcOL5",
            "number": 13617,
            "title": "mix local.hex --force hangs on \"Shall I install Hex?\" prompt",
            "user": {
                "login": "teamon",
                "id": 8083,
                "node_id": "MDQ6VXNlcjgwODM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8083?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/teamon",
                "html_url": "https://github.com/teamon",
                "followers_url": "https://api.github.com/users/teamon/followers",
                "following_url": "https://api.github.com/users/teamon/following{/other_user}",
                "gists_url": "https://api.github.com/users/teamon/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/teamon/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/teamon/subscriptions",
                "organizations_url": "https://api.github.com/users/teamon/orgs",
                "repos_url": "https://api.github.com/users/teamon/repos",
                "events_url": "https://api.github.com/users/teamon/events{/privacy}",
                "received_events_url": "https://api.github.com/users/teamon/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 2,
            "created_at": "2024-05-29T08:05:00Z",
            "updated_at": "2024-05-29T08:54:11Z",
            "closed_at": "2024-05-29T08:54:11Z",
            "author_association": "NONE",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\r\n\r\nThis happens in at least these two versions\r\n\r\n- 1.16.1-otp-26\r\n- 1.16.2-otp-26\r\n- 1.16.3-otp-26\r\n- 1.17.0-rc.0\r\n\r\n### Operating system\r\n\r\nmacOS, but also ubuntu on GitHub Action\r\n\r\n### Current behavior\r\n\r\nRunning `mix local.hex --force` hangs on `Shall I install Hex?` prompt.\r\n\r\nThe issue originated during debugging of [setup-beam](https://github.com/erlef/setup-beam/issues/277#issuecomment-2136767733) but happens also locally.\r\n\r\n```\r\n❯ asdf local elixir 1.16.1-otp-26\r\n❯ elixir --version\r\nErlang/OTP 26 [erts-14.2.5] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit]\r\n\r\nElixir 1.16.1 (compiled with Erlang/OTP 26)\r\n\r\n❯ mix local.hex --force\r\nMix requires the Hex package manager to fetch dependencies\r\nShall I install Hex? (if running non-interactively, use \"mix local.hex --force\") [Yn] ^C\r\nBREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo\r\n       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution\r\n```\r\n\r\n```\r\n❯ asdf local elixir 1.16.2-otp-26\r\n❯ elixir --version\r\nErlang/OTP 26 [erts-14.2.5] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit]\r\n\r\nElixir 1.16.2 (compiled with Erlang/OTP 26)\r\n\r\n❯ mix local.hex --force\r\nMix requires the Hex package manager to fetch dependencies\r\nShall I install Hex? (if running non-interactively, use \"mix local.hex --force\") [Yn] ^C\r\nBREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo\r\n       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution\r\n```\r\n\r\n\r\n```\r\n❯ asdf local elixir 1.16.3-otp-26\r\n❯ elixir --version\r\nErlang/OTP 26 [erts-14.2.5] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit]\r\n\r\nElixir 1.16.3 (compiled with Erlang/OTP 26)\r\n\r\n❯ mix local.hex --force\r\nMix requires the Hex package manager to fetch dependencies\r\nShall I install Hex? (if running non-interactively, use \"mix local.hex --force\") [Yn] ^C\r\nBREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo\r\n       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution\r\n```\r\n\r\n```\r\n❯ asdf local elixir 1.17.0-rc.0-otp-26\r\n❯ elixir --version\r\nErlang/OTP 26 [erts-14.2.5] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit]\r\n\r\nElixir 1.17.0-rc.0 (a2600ea) (compiled with Erlang/OTP 26)\r\n\r\n❯ mix local.hex --force\r\nMix requires the Hex package manager to fetch dependencies\r\nShall I install Hex? (if running non-interactively, use \"mix local.hex --force\") [Yn] ^C\r\nBREAK: (a)bort (A)bort with dump (c)ontinue (p)roc info (i)nfo\r\n       (l)oaded (v)ersion (k)ill (D)b-tables (d)istribution\r\n```\r\n\r\n### Expected behavior\r\n\r\n`mix local.hex --force` should not hang on prompt.\r\n\r\n",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13617/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13617/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13616",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13616/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13616/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13616/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13616",
            "id": 2321702502,
            "node_id": "I_kwDOABLXGs6KYl5m",
            "number": 13616,
            "title": "Inconsistency in implementation of `from_iso8601!` between Date/DateTime/NaiveDateTime",
            "user": {
                "login": "kieraneglin",
                "id": 569917,
                "node_id": "MDQ6VXNlcjU2OTkxNw==",
                "avatar_url": "https://avatars.githubusercontent.com/u/569917?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/kieraneglin",
                "html_url": "https://github.com/kieraneglin",
                "followers_url": "https://api.github.com/users/kieraneglin/followers",
                "following_url": "https://api.github.com/users/kieraneglin/following{/other_user}",
                "gists_url": "https://api.github.com/users/kieraneglin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/kieraneglin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kieraneglin/subscriptions",
                "organizations_url": "https://api.github.com/users/kieraneglin/orgs",
                "repos_url": "https://api.github.com/users/kieraneglin/repos",
                "events_url": "https://api.github.com/users/kieraneglin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/kieraneglin/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 3,
            "created_at": "2024-05-28T18:43:32Z",
            "updated_at": "2024-05-28T19:42:01Z",
            "closed_at": "2024-05-28T19:42:01Z",
            "author_association": "NONE",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\r\n\r\nAll versions\r\n\r\n### Operating system\r\n\r\nN/A\r\n\r\n### Current behavior\r\n\r\nA bang method exists for `Date.from_iso8601/2` and `NaiveDateTime.from_iso8601/2` but not for `DateTime.from_iso8601/{2,3}`\r\n\r\n### Expected behavior\r\n\r\nThe `DateTime` module should have a `from_iso8601!/{2,3}` function that raises if the format is invalid",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13616/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13616/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13615",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13615/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13615/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13615/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13615",
            "id": 2321642762,
            "node_id": "I_kwDOABLXGs6KYXUK",
            "number": 13615,
            "title": "GenServer #PID<~> terminating",
            "user": {
                "login": "moacirbishopcamata",
                "id": 26310912,
                "node_id": "MDQ6VXNlcjI2MzEwOTEy",
                "avatar_url": "https://avatars.githubusercontent.com/u/26310912?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/moacirbishopcamata",
                "html_url": "https://github.com/moacirbishopcamata",
                "followers_url": "https://api.github.com/users/moacirbishopcamata/followers",
                "following_url": "https://api.github.com/users/moacirbishopcamata/following{/other_user}",
                "gists_url": "https://api.github.com/users/moacirbishopcamata/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/moacirbishopcamata/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/moacirbishopcamata/subscriptions",
                "organizations_url": "https://api.github.com/users/moacirbishopcamata/orgs",
                "repos_url": "https://api.github.com/users/moacirbishopcamata/repos",
                "events_url": "https://api.github.com/users/moacirbishopcamata/events{/privacy}",
                "received_events_url": "https://api.github.com/users/moacirbishopcamata/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2024-05-28T18:04:46Z",
            "updated_at": "2024-05-28T18:07:07Z",
            "closed_at": "2024-05-28T18:07:07Z",
            "author_association": "NONE",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nErlang/OTP 26.2.5\n\n### Operating system\n\nWindows 10 pro\n\n### Current behavior\n\n[error] GenServer #PID<0.656.0> terminating\r\n** (stop) :econnaborted\r\nLast message: {:tcp_error, #Port<0.29>, :econnaborted}\r\nState: {%ThousandIsland.Socket{socket: #Port<0.29>, transport_module: ThousandIsland.Transports.TCP, read_timeout: 60000, silent_terminate_on_error: false, span: %ThousandIsland.Telemetry{span_name: :connection, telemetry_span_context: #Reference<0.2654146451.1321992198.4719>, start_time: -5764606668487680, start_metadata: %{remote_port: 60877, remote_address: {127, 0, 0, 1}, telemetry_span_context: #Reference<0.2654146451.1321992198.4719>, parent_telemetry_span_context: #Reference<0.2654146451.1321992194.5644>}}}, %{opts: %{http: [], websocket: [], http_1: [], http_2: []}, plug: {Phoenix.Endpoint.SyncCodeReloadPlug, {EVacinaPetWeb.Endpoint, []}}, handler_module: Bandit.HTTP1.Handler, http_1_enabled: true, http_2_enabled: true, requests_processed: 4}}\n\n### Expected behavior\n\n[info] GET /\r\n[debug] Processing with EVacinaPetWeb.PageController.home/2\r\n  Parameters: %{}\r\n  Pipelines: [:browser]",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13615/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13615/timeline",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13614",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13614/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13614/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13614/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13614",
            "id": 2321275120,
            "node_id": "I_kwDOABLXGs6KW9jw",
            "number": 13614,
            "title": "Provide an API for returning inferred types for a code fragment",
            "user": {
                "login": "josevalim",
                "id": 9582,
                "node_id": "MDQ6VXNlcjk1ODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/josevalim",
                "html_url": "https://github.com/josevalim",
                "followers_url": "https://api.github.com/users/josevalim/followers",
                "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
                "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
                "organizations_url": "https://api.github.com/users/josevalim/orgs",
                "repos_url": "https://api.github.com/users/josevalim/repos",
                "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
                "received_events_url": "https://api.github.com/users/josevalim/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 207975,
                    "node_id": "MDU6TGFiZWwyMDc5NzU=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature",
                    "name": "Kind:Feature",
                    "color": "0052cc",
                    "default": false,
                    "description": null
                },
                {
                    "id": 2660471585,
                    "node_id": "MDU6TGFiZWwyNjYwNDcxNTg1",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir%20(checker)",
                    "name": "App:Elixir (checker)",
                    "color": "CCCCCC",
                    "default": false,
                    "description": ""
                }
            ],
            "state": "open",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2024-05-28T14:46:34Z",
            "updated_at": "2024-05-29T14:22:27Z",
            "closed_at": null,
            "author_association": "MEMBER",
            "active_lock_reason": null,
            "body": "Potentially one fast API for providing type for cursor context so we can infer e.g. map or keyword keys and one precise for things like inline hints over the whole file/expressions.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13614/reactions",
                "total_count": 3,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 3,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13614/timeline",
            "performed_via_github_app": null,
            "state_reason": null,
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13612",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13612/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13612/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13612/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13612",
            "id": 2320768938,
            "node_id": "I_kwDOABLXGs6KVB-q",
            "number": 13612,
            "title": "surround_context is not aware of bitstring modifiers",
            "user": {
                "login": "lukaszsamson",
                "id": 1078186,
                "node_id": "MDQ6VXNlcjEwNzgxODY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1078186?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lukaszsamson",
                "html_url": "https://github.com/lukaszsamson",
                "followers_url": "https://api.github.com/users/lukaszsamson/followers",
                "following_url": "https://api.github.com/users/lukaszsamson/following{/other_user}",
                "gists_url": "https://api.github.com/users/lukaszsamson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lukaszsamson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lukaszsamson/subscriptions",
                "organizations_url": "https://api.github.com/users/lukaszsamson/orgs",
                "repos_url": "https://api.github.com/users/lukaszsamson/repos",
                "events_url": "https://api.github.com/users/lukaszsamson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lukaszsamson/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 2,
            "created_at": "2024-05-28T11:03:11Z",
            "updated_at": "2024-05-29T13:50:44Z",
            "closed_at": "2024-05-29T13:50:43Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nErlang/OTP 26 [erts-14.2.1] [source] [64-bit] [smp:12:12] [ds:12:12:10] [async-threads:1] [jit]\r\n\r\nElixir 1.18.0-dev (642cc79) (compiled with Erlang/OTP 26)\n\n### Operating system\n\nany\n\n### Current behavior\n\nBitstring modifiers are returned as vars or local calls\r\n```\r\niex(5)> Code.Fragment.surround_context(\"<<version_byte::binary-size(1), rest::binary>>\", {1, 17})\r\n%{context: {:local_or_var, ~c\"binary\"}, begin: {1, 17}, end: {1, 23}}\r\niex(6)> Code.Fragment.surround_context(\"<<version_byte::binary-size(1), rest::binary>>\", {1, 23})\r\n%{context: {:operator, ~c\"-\"}, begin: {1, 23}, end: {1, 24}}\r\niex(7)> Code.Fragment.surround_context(\"<<version_byte::binary-size(1), rest::binary>>\", {1, 24})\r\n%{context: {:local_call, ~c\"size\"}, begin: {1, 24}, end: {1, 28}}\r\n```\n\n### Expected behavior\n\n`Code.Fragment.surround_context` should be aware of bitstring modifiers. ",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13612/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13612/timeline",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13609",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13609/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13609/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13609/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13609",
            "id": 2319741075,
            "node_id": "I_kwDOABLXGs6KRHCT",
            "number": 13609,
            "title": "Invalid compilation of macro with capture expression",
            "user": {
                "login": "lukaszsamson",
                "id": 1078186,
                "node_id": "MDQ6VXNlcjEwNzgxODY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1078186?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lukaszsamson",
                "html_url": "https://github.com/lukaszsamson",
                "followers_url": "https://api.github.com/users/lukaszsamson/followers",
                "following_url": "https://api.github.com/users/lukaszsamson/following{/other_user}",
                "gists_url": "https://api.github.com/users/lukaszsamson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lukaszsamson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lukaszsamson/subscriptions",
                "organizations_url": "https://api.github.com/users/lukaszsamson/orgs",
                "repos_url": "https://api.github.com/users/lukaszsamson/repos",
                "events_url": "https://api.github.com/users/lukaszsamson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lukaszsamson/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2024-05-27T20:25:39Z",
            "updated_at": "2024-06-01T15:09:45Z",
            "closed_at": "2024-06-01T15:09:45Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nErlang/OTP 26 [erts-14.2.1] [source] [64-bit] [smp:12:12] [ds:12:12:10] [async-threads:1] [jit]\r\n\r\nElixir 1.18.0-dev (642cc79) (compiled with Erlang/OTP 26)\n\n### Operating system\n\nany\n\n### Current behavior\n\nRepro:\r\nIn iex\r\n```\r\ndefmodule A do\r\n  defmacro c(x) do\r\n    quote do\r\n      & unquote(x) <> &1\r\n    end\r\n  end\r\n  defmacro f(x) do\r\n    quote do\r\n      fn y -> unquote(x) <> y end\r\n    end\r\n  end\r\nend\r\n\r\nrequire A\r\n```\r\nFn version works correctly:\r\n```\r\n(& A.f(&1).(\"b\")).(\"a\")\r\n\"ab\"\r\n```\r\nCapture version returns incorrect value and emits a warning\r\n```\r\n(& A.c(&1).(\"b\")).(\"a\")\r\nwarning: variable \"&1\" is unused (this might happen when using a capture argument as a pattern)\r\n└─ iex:5\r\n\r\n\"bb\"\r\n```\r\n\r\nThe reason is that the macro call expands to AST with `nil` context and `&1` from outer and inner `fn` get mixed up\r\n\r\n```\r\n:elixir_expand.expand(Code.string_to_quoted!(\"& A.c(&1).(\\\"b\\\")\"), :elixir_env.env_to_ex(__ENV__), __ENV__) |> elem(0)\r\n\r\n{:fn, [line: 1],\r\n [\r\n   {:->, [line: 1],\r\n    [\r\n      [{:\"&1\", [version: 0, line: 1], nil}],\r\n      {{:., [line: 1],\r\n        [\r\n          {:fn, [line: 1, context: A, imports: [{2, Kernel}]],\r\n           [\r\n             {:->, [line: 1, context: A, imports: [{2, Kernel}]],\r\n              [\r\n                [{:\"&1\", [version: 1, line: 1], nil}],\r\n                {:<<>>, [alignment: 0, line: 1],\r\n                 [\r\n                   {:\"::\", [line: 1],\r\n                    [{:\"&1\", [version: 1, line: 1], nil}, {:binary, [], nil}]},\r\n                   {:\"::\", [line: 1],\r\n                    [{:\"&1\", [version: 1, line: 1], nil}, {:binary, [], nil}]}\r\n                 ]}\r\n              ]}\r\n           ]}\r\n        ]}, [line: 1], [\"b\"]}\r\n    ]}\r\n ]}\r\n```\n\n### Expected behavior\n\nThe code should either fail to compile as nested captures are normally not allowed or should expand correctly and maintain variable hygiene",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13609/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13609/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13602",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13602/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13602/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13602/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13602",
            "id": 2317930163,
            "node_id": "I_kwDOABLXGs6KKM6z",
            "number": 13602,
            "title": "List.myers_difference/3 results different when comparing nested value",
            "user": {
                "login": "bcardarella",
                "id": 18524,
                "node_id": "MDQ6VXNlcjE4NTI0",
                "avatar_url": "https://avatars.githubusercontent.com/u/18524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bcardarella",
                "html_url": "https://github.com/bcardarella",
                "followers_url": "https://api.github.com/users/bcardarella/followers",
                "following_url": "https://api.github.com/users/bcardarella/following{/other_user}",
                "gists_url": "https://api.github.com/users/bcardarella/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bcardarella/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bcardarella/subscriptions",
                "organizations_url": "https://api.github.com/users/bcardarella/orgs",
                "repos_url": "https://api.github.com/users/bcardarella/repos",
                "events_url": "https://api.github.com/users/bcardarella/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bcardarella/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 4,
            "created_at": "2024-05-26T20:56:29Z",
            "updated_at": "2024-05-26T21:36:36Z",
            "closed_at": "2024-05-26T21:27:04Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "Given the following:\r\n\r\n```elixir\r\ndoca = \"\"\"\r\n        config :phoenix, :template_engines, [\r\n          other: Other.Engine,\r\n        ]\r\n        \"\"\"\r\n\r\ndocb = \"\"\"\r\n        config :phoenix, :template_engines, [\r\n          neex: LiveViewNative.Engine,\r\n          other: Other.Engine\r\n        ]\r\n        \"\"\"\r\n```\r\n\r\nI can split on newlines and find the diff between the two like so:\r\n\r\n```elixir\r\ndef diff(a, b) do\r\n  a = String.split(a, \"\\n\")\r\n  b = String.split(b, \"\\n\")\r\n\r\n  List.myers_difference(a, b, &Kernel.==/2)\r\nend\r\n```\r\n\r\nthis returns the expected diff:\r\n\r\n```elixir\r\n[\r\n  eq: [\"config :phoenix, :template_engines, [\"],\r\n  del: [\"  other: Other.Engine,\"],\r\n  ins: [\"  neex: LiveViewNative.Engine,\", \"  other: Other.Engine\"],\r\n  eq: [\"]\", \"\"]\r\n]\r\n```\r\n\r\nhowever, if I in change to tuples with line numbers:\r\n\r\n```elixir\r\ndef diff(a, b) do\r\n  a = String.split(a, \"\\n\") |> Enum.with_index(&({&2 + 1, &1}))\r\n  b = String.split(b, \"\\n\") |> Enum.with_index(&({&2 + 1, &1}))\r\n\r\n  List.myers_difference(a, b, &(elem(&1, 1) == elem(&2, 1)))\r\nend\r\n```\r\n\r\nthis results in:\r\n\r\n```elixir\r\n[\r\n  eq: [{1, \"config :phoenix, :template_engines, [\"}],\r\n  del: [{2, \"  other: Other.Engine,\"}],\r\n  ins: [{2, \"  neex: LiveViewNative.Engine,\"}, {3, \"  other: Other.Engine\"}],\r\n  diff: true,\r\n  diff: true\r\n]\r\n```\r\n\r\nNow I know the docs reference the nested `diff` key, but if looking at the source, if I add `IO.inspect({diff, elem1, elem2}, label: direction)` to:\r\n\r\nhttps://github.com/elixir-lang/elixir/blob/v1.16.3/lib/elixir/lib/list.ex#L1274\r\nhttps://github.com/elixir-lang/elixir/blob/v1.16.3/lib/elixir/lib/list.ex#L1291\r\n\r\nfor the first data set I get:\r\n\r\n```elixir\r\nDown: {false, \"  other: Other.Engine,\", \"  neex: LiveViewNative.Engine,\"}\r\nRight: {false, \"  other: Other.Engine,\", \"  neex: LiveViewNative.Engine,\"}\r\nDown: {false, \"]\", \"  neex: LiveViewNative.Engine,\"}\r\nRight: {false, \"]\", \"  neex: LiveViewNative.Engine,\"}\r\nRight: {false, \"  other: Other.Engine,\", \"  other: Other.Engine\"}\r\nDown: {false, \"\", \"  neex: LiveViewNative.Engine,\"}\r\nRight: {false, \"\", \"  neex: LiveViewNative.Engine,\"}\r\nRight: {false, \"]\", \"  other: Other.Engine\"}\r\n```\r\n\r\nand for the 2nd:\r\n\r\n```elixir\r\nDown: {false, {2, \"  other: Other.Engine,\"}, {2, \"  neex: LiveViewNative.Engine,\"}}\r\nRight: {false, {2, \"  other: Other.Engine,\"}, {2, \"  neex: LiveViewNative.Engine,\"}}\r\nDown: {false, {3, \"]\"}, {2, \"  neex: LiveViewNative.Engine,\"}}\r\nRight: {false, {3, \"]\"}, {2, \"  neex: LiveViewNative.Engine,\"}}\r\nRight: {false, {2, \"  other: Other.Engine,\"}, {3, \"  other: Other.Engine\"}}\r\nDown: {false, {4, \"\"}, {2, \"  neex: LiveViewNative.Engine,\"}}\r\nRight: {false, {4, \"\"}, {2, \"  neex: LiveViewNative.Engine,\"}}\r\nRight: {false, {3, \"]\"}, {3, \"  other: Other.Engine\"}}\r\nRight: {false, {2, \"  other: Other.Engine,\"}, {4, \"]\"}}\r\nRight: {false, {4, \"\"}, {3, \"  other: Other.Engine\"}}\r\nRight: {true, {3, \"]\"}, {4, \"]\"}}\r\nRight: {false, {2, \"  other: Other.Engine,\"}, {5, \"\"}}\r\nDown: {true, {4, \"\"}, {5, \"\"}}\r\n```\r\n\r\nThe 2nd data set results in a longer path being gone over which is resulting in the `true` values for the comparison and the additional scripts in the final list.\r\n\r\nSo where am I screwing up?",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13602/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13602/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13600",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13600/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13600/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13600/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13600",
            "id": 2316811431,
            "node_id": "I_kwDOABLXGs6KF7yn",
            "number": 13600,
            "title": "Duplicated and invalid traces emitted on fn captures",
            "user": {
                "login": "lukaszsamson",
                "id": 1078186,
                "node_id": "MDQ6VXNlcjEwNzgxODY=",
                "avatar_url": "https://avatars.githubusercontent.com/u/1078186?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/lukaszsamson",
                "html_url": "https://github.com/lukaszsamson",
                "followers_url": "https://api.github.com/users/lukaszsamson/followers",
                "following_url": "https://api.github.com/users/lukaszsamson/following{/other_user}",
                "gists_url": "https://api.github.com/users/lukaszsamson/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/lukaszsamson/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/lukaszsamson/subscriptions",
                "organizations_url": "https://api.github.com/users/lukaszsamson/orgs",
                "repos_url": "https://api.github.com/users/lukaszsamson/repos",
                "events_url": "https://api.github.com/users/lukaszsamson/events{/privacy}",
                "received_events_url": "https://api.github.com/users/lukaszsamson/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2024-05-25T07:52:19Z",
            "updated_at": "2024-05-25T09:13:01Z",
            "closed_at": "2024-05-25T09:13:01Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\r\n\r\nErlang/OTP 26 [erts-14.2.1] [source] [64-bit] [smp:12:12] [ds:12:12:10] [async-threads:1] [jit]\r\n\r\nElixir 1.17.0-dev (f23434e) (compiled with Erlang/OTP 26)\r\n\r\n### Operating system\r\n\r\nall\r\n\r\n### Current behavior\r\n\r\nWhen code with captures of inlined functions is expanded invalid and duplicated traces are emitted\r\n\r\nDuplicated and the second one mentions inlined function\r\n```\r\n&Map.keys/1\r\n {:remote_function, [no_parens: true, line: 4, column: 10], Map, :keys, 1}\r\n {:remote_function, [no_parens: true, line: 4, column: 10], :maps, :keys, 1}\r\n```\r\n\r\nThose work OK\r\n```\r\nMap.keys(abc)\r\n{:remote_function, meta, Map, :keys, 1}\r\n&[&1, Map.keys(&2)]\r\n{:remote_function, [closing: [line: 5, column: 22], line: 5, column: 15], Map, :keys, 1}\r\n```\r\n\r\nDuplicated and the second one mentions inlined function. Duplication here is expected according to the docs on `:imported_function` trace\r\n```\r\nimport Map\r\n&keys/1\r\n{:imported_function, [line: 9, column: 6], Map, :keys, 1}\r\n{:remote_function, [line: 9, column: 6], :maps, :keys, 1}\r\n```\r\n\r\nThose work OK\r\n```\r\nkeys(abc)\r\n{:imported_function, meta, Map, :keys, 1}\r\n{:remote_function, meta, Map, :keys, 1}\r\n&[&1, keys(&2)]\r\n{:imported_function, [closing: [line: 10, column: 18], line: 10, column: 11],\r\n Map, :keys, 1}\r\n{:remote_function, [closing: [line: 10, column: 18], line: 10, column: 11], Map,\r\n :keys, 1}\r\n```\r\n\r\nLocal captures work OK even if the captured def is annotated with `@compile {:inline, fun: arity}`\r\n\r\n### Expected behavior\r\n\r\nNo duplicated `:remote_function` on remote fn capture. Original module and function emitted in fn capture traces instead of inlined ones.\r\nAlternatively, we could standardise and emit consistently traces for both original and inlined/rewritten calls and captures",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13600/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13600/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13598",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13598/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13598/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13598/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13598",
            "id": 2316020111,
            "node_id": "I_kwDOABLXGs6KC6mP",
            "number": 13598,
            "title": "Dialyzer fails on `sigil_r` with unicode (`/u`) modifier in 1.17-rc.0+ (was fine in 1.16.3-)",
            "user": {
                "login": "breunigs",
                "id": 307954,
                "node_id": "MDQ6VXNlcjMwNzk1NA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/307954?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/breunigs",
                "html_url": "https://github.com/breunigs",
                "followers_url": "https://api.github.com/users/breunigs/followers",
                "following_url": "https://api.github.com/users/breunigs/following{/other_user}",
                "gists_url": "https://api.github.com/users/breunigs/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/breunigs/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/breunigs/subscriptions",
                "organizations_url": "https://api.github.com/users/breunigs/orgs",
                "repos_url": "https://api.github.com/users/breunigs/repos",
                "events_url": "https://api.github.com/users/breunigs/events{/privacy}",
                "received_events_url": "https://api.github.com/users/breunigs/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 2,
            "created_at": "2024-05-24T18:34:28Z",
            "updated_at": "2024-05-24T19:26:18Z",
            "closed_at": "2024-05-24T19:26:17Z",
            "author_association": "NONE",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nVersions that fail:\r\n- Erlang/OTP 26 [erts-14.2.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]; Elixir 1.18.0-dev (43788c0) (compiled with Erlang/OTP 25)\r\n- Erlang/OTP 26 [erts-14.2.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]; Elixir 1.17.0-rc.0 (a2600ea) (compiled with Erlang/OTP 25)\r\n- Erlang/OTP 25 [erts-13.2.2.6] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]; 1.17.0-rc.0 (a2600ea) (compiled with Erlang/OTP 25)\r\n- Erlang/OTP 27 [erts-15.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]; Elixir 1.17.0-rc.0 (a2600ea) (compiled with Erlang/OTP 25)\r\n\r\nVersions that works:\r\n- Erlang/OTP 26 [erts-14.2.1] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]; 1.16.3 (compiled with Erlang/OTP 24)\r\n- likely Elixir 1.16.1, but didn't reproduce with the test case\n\n### Operating system\n\nLinux\n\n### Current behavior\n\nSTR:\r\n1.  `mix new debug`\r\n2. put `Regex.source(~r/foo/u)` into the auto-generated `lib/debug.ex`, e.g. into `hello/0`\r\n3. add `{:dialyxir, \"~> 1.4\", only: [:dev, :test], runtime: false}` to `mix.exs` and `mix deps.get` etc\r\n4. `mix dialyzer`\n\n### Expected behavior\n\nIn versions that work, Dialyzer (or Dialyxer) doesn't report any issues.\r\nIn the newer versions, it is not happy:\r\n```\r\nTotal errors: 1, Skipped: 0, Unnecessary Skips: 0\r\ndone in 0m0.96s\r\nlib/debug.ex:15:no_return\r\nFunction hello/0 has no local return.\r\n________________________________________________________________________________\r\ndone (warnings were emitted)\r\nHalting VM with exit status 2\r\n```\r\n\r\nIt seems to be related to `sigil_r` with unicode modifier being actually processed, i.e. passed to some `Regex` or `String` function. Note that the actual regex continues to work, and only Dialyzer is complaining. So if there is an edge case that triggers the error condition that makes Dialyzer complain, I have not found it yet.\r\n\r\nFindings so far (works = Dialyzer reports no error):\r\n- The same issue appears when using e.g. `String.replace`\r\n- Unicode in the subject works (e.g. `String.match?(\"josé\", ~r/^[[:lower:]]+$/)` from the docs continues to work)\r\n- Unicode in regex without unicode modifier works, e.g. `Regex.source(~r/ẞÄẞ®₃©™§/)` produces no errors\r\n- \"bare\" `sigil_r` is ok, too: `IO.inspect(~r{foo}u)`\r\n- this example `Regex.replace(~r/\\s/u, \"Unicode\\u00A0spaces\", \"-\")` from the [regex docs](https://hexdocs.pm/elixir/main/Regex.html#module-character-classes) also fails. At a glance it's part of the doctests, so running Dialyzer on those should've caught the issue. Out of scope for this bug report for sure, but maybe a worthwhile investigation to prevent regressions.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13598/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13598/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13595",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13595/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13595/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13595/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13595",
            "id": 2315751340,
            "node_id": "I_kwDOABLXGs6KB4-s",
            "number": 13595,
            "title": "Type warning on macro param that may be a module",
            "user": {
                "login": "ypconstante",
                "id": 8113764,
                "node_id": "MDQ6VXNlcjgxMTM3NjQ=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8113764?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ypconstante",
                "html_url": "https://github.com/ypconstante",
                "followers_url": "https://api.github.com/users/ypconstante/followers",
                "following_url": "https://api.github.com/users/ypconstante/following{/other_user}",
                "gists_url": "https://api.github.com/users/ypconstante/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ypconstante/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ypconstante/subscriptions",
                "organizations_url": "https://api.github.com/users/ypconstante/orgs",
                "repos_url": "https://api.github.com/users/ypconstante/repos",
                "events_url": "https://api.github.com/users/ypconstante/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ypconstante/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2024-05-24T16:03:48Z",
            "updated_at": "2024-05-24T17:47:52Z",
            "closed_at": "2024-05-24T17:47:52Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nErlang/OTP 25 [erts-13.2.2.9] [source] [64-bit] [smp:10:10] [ds:10:10:10] [async-threads:1]\r\n\r\nElixir 1.17.0-rc.0 (a2600ea) (compiled with Erlang/OTP 25)\n\n### Operating system\n\nmacOS 14.5\n\n### Current behavior\n\nPhoenix LiveView test function [render_component macro](https://github.com/phoenixframework/phoenix_live_view/blob/e742ca8c8e6d8303c723c89dc9e6c66e743e43dc/lib/phoenix_live_view/test/live_view_test.ex#L452) can receive a module or a function as the component value. Using this macro on Elixir 1.17.0-rc.0 with a function as the component value causes an unexpected warning\r\n\r\n```\r\n   warning: expected a module (an atom) when invoking __live__/0 in expression:\r\n\r\n        component.__live__()\r\n\r\n    where \"component\" (context Phoenix.LiveViewTest) was given the type:\r\n\r\n        # type: fun()\r\n```\r\n\r\nSmall sample\r\n```\r\ndefmodule Sample do\r\n  defmacro render(component) do\r\n    quote do\r\n      component = unquote(component)\r\n\r\n      # because of this line, any \"component\" that isn't an atom will have a warning \r\n      if(is_atom(component), do: component.__live__())\r\n\r\n      Sample.__render__(unquote(component))\r\n    end\r\n  end\r\n\r\n  def __render__(_component), do: true\r\n\r\n  def call do\r\n    render(%{})\r\n  end\r\nend\r\n```\r\n\r\n```\r\nwarning: expected a module (an atom) when invoking __live__/0 in expression:\r\n\r\n    component.__live__()\r\n\r\nwhere \"component\" (context Sample) was given the type:\r\n\r\n    # type: empty_map()\r\n    # from: iex:17\r\n    component = %{}\r\n\r\nhint: \"var.field\" (without parentheses) means \"var\" is a map() while \"var.fun()\" (with parentheses) means \"var\" is an atom()\r\n\r\ntyping violation found at:\r\n└─ iex:17: Sample.call/0\r\n```\n\n### Expected behavior\n\nNo warning being logged, like in the previous version",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13595/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13595/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13593",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13593/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13593/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13593/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13593",
            "id": 2314735022,
            "node_id": "I_kwDOABLXGs6J-A2u",
            "number": 13593,
            "title": "Specific tuples passed to `Macro.escape/2` cause it to crash ",
            "user": {
                "login": "kristofka",
                "id": 140354,
                "node_id": "MDQ6VXNlcjE0MDM1NA==",
                "avatar_url": "https://avatars.githubusercontent.com/u/140354?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/kristofka",
                "html_url": "https://github.com/kristofka",
                "followers_url": "https://api.github.com/users/kristofka/followers",
                "following_url": "https://api.github.com/users/kristofka/following{/other_user}",
                "gists_url": "https://api.github.com/users/kristofka/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/kristofka/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/kristofka/subscriptions",
                "organizations_url": "https://api.github.com/users/kristofka/orgs",
                "repos_url": "https://api.github.com/users/kristofka/repos",
                "events_url": "https://api.github.com/users/kristofka/events{/privacy}",
                "received_events_url": "https://api.github.com/users/kristofka/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 0,
            "created_at": "2024-05-24T08:18:40Z",
            "updated_at": "2024-05-24T09:33:05Z",
            "closed_at": "2024-05-24T09:33:05Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nelixir version 1.16. and up, any otp version.\n\n### Operating system\n\nany\n\n### Current behavior\n\nPassing a three elements tuple where the first element is `:quote`, the second is anything but a list, and the third is a list with exactly one or two element causes `Macro.escape/2` to crash : minimal reproducible example :\r\n```elixir\r\niex(1)> Macro.escape({:quote, :foo, [:bar]})\r\n** (FunctionClauseError) no function clause matching in :lists.keydelete3/3\r\n\r\n    The following arguments were given to :lists.keydelete3/3:\r\n\r\n        # 1\r\n        :column\r\n\r\n        # 2\r\n        1\r\n\r\n        # 3\r\n        :foo\r\n\r\n    (stdlib 5.2.1) lists.erl:885: :lists.keydelete3/3\r\n    (elixir 1.16.2) src/elixir_quote.erl:561: :elixir_quote.meta/2\r\n    (elixir 1.16.2) src/elixir_quote.erl:294: :elixir_quote.do_quote/3\r\n    iex:1: (file)\r\n```\r\n\r\n```elixir\r\niex(1)> Macro.escape({:quote, :foo, [:bar, :baz]})\r\n** (FunctionClauseError) no function clause matching in :lists.keydelete3/3\r\n\r\n    The following arguments were given to :lists.keydelete3/3:\r\n\r\n        # 1\r\n        :column\r\n\r\n        # 2\r\n        1\r\n\r\n        # 3\r\n        :foo\r\n\r\n    (stdlib 5.2.1) lists.erl:885: :lists.keydelete3/3\r\n    (elixir 1.16.2) src/elixir_quote.erl:561: :elixir_quote.meta/2\r\n    (elixir 1.16.2) src/elixir_quote.erl:294: :elixir_quote.do_quote/3\r\n    iex:1: (file)\r\n```\r\n\r\nThis issue was first reported in absinthe :    #absinthe-graphql/absinthe/issues/1313\n\n### Expected behavior\n\nThe function should properly escape the tuple : \r\n\r\n```elixir\r\niex(1)> Macro.escape({:quote, :foo, [:bar]})\r\n{:{}, [], [:quote, :foo, [:bar]]}\r\n```\r\n\r\nA fix is easy enough and I'll submit a PR shortly. However, I'm not entirely convinced that it is possible to completely fix the issue, as tuples of this form may be ambiguous when using Macro.escape/2. For example we have  :\r\n\r\n```elixir\r\niex(1)> Macro.escape({:quote, [column: 10], [:foo]})\r\n{:{}, [], [:quote, [], [:foo]]}\r\niex(2)> Macro.escape({:quote, [column: 10], [:foo, :bar]})\r\n{:{}, [], [:quote, [], [:foo, :bar]]}\r\niex(3)> Macro.escape({:quote, [column: 10], [:foo, :bar, :baz]})\r\n{:{}, [], [:quote, [column: 10], [:foo, :bar, :baz]]}\r\niex(4)>\r\n```\r\nWhich is surprising and arguably a bug as well, and is not solved by the solution I'll submit.\r\n\r\nThe issue here is that those are caught by the clauses on line 266 of the `src/elixir_quote.erl`, namely : \r\n\r\n```erlang\r\ndo_quote({quote, Meta, [Arg]}, Q) ->\r\n  TArg = do_quote(Arg, Q#elixir_quote{unquote=false}),\r\n\r\n  NewMeta = case Q of\r\n    #elixir_quote{op=add_context, context=Context} -> keystore(context, Meta, Context);\r\n    _ -> Meta\r\n  end,\r\n\r\n  {'{}', [], [quote, meta(NewMeta, Q), [TArg]]};\r\n\r\ndo_quote({quote, Meta, [Opts, Arg]}, Q) ->\r\n  TOpts = do_quote(Opts, Q),\r\n  TArg = do_quote(Arg, Q#elixir_quote{unquote=false}),\r\n\r\n  NewMeta = case Q of\r\n    #elixir_quote{op=add_context, context=Context} -> keystore(context, Meta, Context);\r\n    _ -> Meta\r\n  end,\r\n\r\n  {'{}', [], [quote, meta(NewMeta, Q), [TOpts, TArg]]};\r\n```\r\n\r\nI have attempted but failed to solve the issue at this point, it's unclear to me what careful pattern matching could solve the issue, if any.\r\n\r\n \r\n\r\n ",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13593/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13593/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13591",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13591/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13591/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13591/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13591",
            "id": 2313372167,
            "node_id": "I_kwDOABLXGs6J40IH",
            "number": 13591,
            "title": "Code.string_to_quoted reporting wrong column for start of a Map",
            "user": {
                "login": "bcardarella",
                "id": 18524,
                "node_id": "MDQ6VXNlcjE4NTI0",
                "avatar_url": "https://avatars.githubusercontent.com/u/18524?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/bcardarella",
                "html_url": "https://github.com/bcardarella",
                "followers_url": "https://api.github.com/users/bcardarella/followers",
                "following_url": "https://api.github.com/users/bcardarella/following{/other_user}",
                "gists_url": "https://api.github.com/users/bcardarella/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/bcardarella/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/bcardarella/subscriptions",
                "organizations_url": "https://api.github.com/users/bcardarella/orgs",
                "repos_url": "https://api.github.com/users/bcardarella/repos",
                "events_url": "https://api.github.com/users/bcardarella/events{/privacy}",
                "received_events_url": "https://api.github.com/users/bcardarella/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 778790,
                    "node_id": "MDU6TGFiZWw3Nzg3OTA=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Note:Discussion",
                    "name": "Note:Discussion",
                    "color": "bfdadc",
                    "default": false,
                    "description": null
                }
            ],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 15,
            "created_at": "2024-05-23T16:29:57Z",
            "updated_at": "2024-05-23T19:16:51Z",
            "closed_at": "2024-05-23T17:43:24Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "```elixir\r\niex(13)> Code.string_to_quoted!(\"%{a: 1}\", [columns: true])\r\n{:%{}, [line: 1, column: 2], [a: 1]}\r\n```\r\n\r\nI would expect the column to be `1`.\r\n\r\nCompare this to sigils:\r\n\r\n```elixir\r\niex(14)> Code.string_to_quoted!(\"~LVN()\", [columns: true])\r\n{:sigil_LVN, [delimiter: \"(\", line: 1, column: 1],\r\n [{:<<>>, [line: 1, column: 1], [\"\"]}, []]}\r\niex(15)>\r\n```\r\n\r\nor even a struct:\r\n\r\n```elixir\r\niex(15)> Code.string_to_quoted!(\"%Foo{}\", [columns: true])\r\n{:%, [line: 1, column: 1],\r\n [\r\n   {:__aliases__, [line: 1, column: 2], [:Foo]},\r\n   {:%{}, [line: 1, column: 5], []}\r\n ]}\r\n```\r\n\r\nand they each report the proper starting column.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13591/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13591/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13590",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13590/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13590/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13590/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13590",
            "id": 2312691217,
            "node_id": "I_kwDOABLXGs6J2N4R",
            "number": 13590,
            "title": "`quote/2` breaks compilation when both `:bind_quoted` and `:context` are given",
            "user": {
                "login": "am-kantox",
                "id": 11388982,
                "node_id": "MDQ6VXNlcjExMzg4OTgy",
                "avatar_url": "https://avatars.githubusercontent.com/u/11388982?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/am-kantox",
                "html_url": "https://github.com/am-kantox",
                "followers_url": "https://api.github.com/users/am-kantox/followers",
                "following_url": "https://api.github.com/users/am-kantox/following{/other_user}",
                "gists_url": "https://api.github.com/users/am-kantox/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/am-kantox/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/am-kantox/subscriptions",
                "organizations_url": "https://api.github.com/users/am-kantox/orgs",
                "repos_url": "https://api.github.com/users/am-kantox/repos",
                "events_url": "https://api.github.com/users/am-kantox/events{/privacy}",
                "received_events_url": "https://api.github.com/users/am-kantox/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 1,
            "created_at": "2024-05-23T11:40:51Z",
            "updated_at": "2024-05-23T15:36:38Z",
            "closed_at": "2024-05-23T15:36:38Z",
            "author_association": "CONTRIBUTOR",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\r\n\r\nErlang/OTP 27 [erts-15.0] [source] [64-bit] [smp:8:8] [ds:8:8:10] [async-threads:1] [jit:ns]\r\n\r\nElixir 1.17.0-dev (f23434e) (compiled with Erlang/OTP 27)\r\n\r\n### Operating system\r\n\r\nLinux 6.5.0-14-generic #14-Ubuntu SMP PREEMPT_DYNAMIC Tue Nov 14 14:59:49 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux\r\n\r\n### Current behavior\r\n\r\nThe module below \r\n```elixir\r\ndefmodule VersionMeta do\r\n  defmacro failing(some_var) do\r\n    quote bind_quoted: [some_var: some_var], context: __CALLER__.context do\r\n      some_var\r\n    end\r\n  end\r\nend\r\n```\r\nfails to compile with the following error message\r\n```elixir\r\n** (MatchError) no match of right hand side value: false\r\n    (elixir 1.17.0-dev) src/elixir_erl_var.erl:16: :elixir_erl_var.translate/4\r\n    (stdlib 6.0) lists.erl:2343: :lists.mapfoldl_1/3\r\n    (stdlib 6.0) lists.erl:2344: :lists.mapfoldl_1/3\r\n    (elixir 1.17.0-dev) src/elixir_erl_pass.erl:42: :elixir_erl_pass.translate/3\r\n    (elixir 1.17.0-dev) src/elixir_erl_pass.erl:315: :elixir_erl_pass.translate_list/4\r\n    (stdlib 6.0) lists.erl:2343: :lists.mapfoldl_1/3\r\n    (stdlib 6.0) lists.erl:2344: :lists.mapfoldl_1/3\r\n```\r\n\r\n---\r\n\r\nIf either of `bind_quoted` and/or `context` is not presented, there is no issue. \r\n\r\n### Expected behavior\r\n\r\nIt should compile.\r\n\r\n### Related forum thread\r\n\r\nhttps://elixirforum.com/t/compilation-fails-on-1-17-0-dev-because-of-lack-of-version-meta-key/63732/3",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13590/reactions",
                "total_count": 1,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 1,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13590/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13588",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13588/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13588/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13588/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13588",
            "id": 2310902521,
            "node_id": "I_kwDOABLXGs6JvZL5",
            "number": 13588,
            "title": "ProcolEx unable to resolve cross-umbrella-app implementations on Elixir 1.15+",
            "user": {
                "login": "DaTrader",
                "id": 30151179,
                "node_id": "MDQ6VXNlcjMwMTUxMTc5",
                "avatar_url": "https://avatars.githubusercontent.com/u/30151179?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/DaTrader",
                "html_url": "https://github.com/DaTrader",
                "followers_url": "https://api.github.com/users/DaTrader/followers",
                "following_url": "https://api.github.com/users/DaTrader/following{/other_user}",
                "gists_url": "https://api.github.com/users/DaTrader/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/DaTrader/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/DaTrader/subscriptions",
                "organizations_url": "https://api.github.com/users/DaTrader/orgs",
                "repos_url": "https://api.github.com/users/DaTrader/repos",
                "events_url": "https://api.github.com/users/DaTrader/events{/privacy}",
                "received_events_url": "https://api.github.com/users/DaTrader/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 14,
            "created_at": "2024-05-22T15:57:56Z",
            "updated_at": "2024-05-24T17:48:41Z",
            "closed_at": "2024-05-23T19:15:46Z",
            "author_association": "NONE",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\r\n\r\nErlang/OTP 25 [erts-13.2.2.9] [source] [64-bit] [smp:24:24] [ds:24:24:10] [async-threads:1] [jit:ns]\r\n\r\nElixir 1.15.7 (compiled with Erlang/OTP 25)\r\n\r\n\r\n### Operating system\r\n\r\nLinux Mint\r\n\r\n### Current behavior\r\n\r\nAs of Elixir 1.15, the ProtocolEx library can no longer resolve the implementations of protocols residing in a different umbrella app. Prior to Elixir 1.15 this used to work just fine.\r\n\r\nThe following demo app reproduces the bug: https://github.com/DaTrader/demo_umbrella_1_15\r\n\r\nWorks properly:\r\n\r\n```elixir\r\nasdf global elixir 1.14.5-otp-25\r\nmix deps.get\r\nmix compile\r\nmix test # maybe needed to repeat it once again and the tests will pass for sure\r\n```\r\n\r\nWorks only with implementations residing in the same umbrella app as the protocols they respectively implement.\r\n\r\n```elixir\r\nasdf global elixir 1.15.7-otp-25\r\nmix deps.get\r\nmix compile\r\nmix test # always fails the same test\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nThe tests should pass on all supported Elixir versions, including 1.15.x and 1.16.x.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13588/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13588/timeline",
            "performed_via_github_app": null,
            "state_reason": "not_planned",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13582",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13582/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13582/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13582/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13582",
            "id": 2308051505,
            "node_id": "I_kwDOABLXGs6JkhIx",
            "number": 13582,
            "title": "Optimize type checking with :term",
            "user": {
                "login": "josevalim",
                "id": 9582,
                "node_id": "MDQ6VXNlcjk1ODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/josevalim",
                "html_url": "https://github.com/josevalim",
                "followers_url": "https://api.github.com/users/josevalim/followers",
                "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
                "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
                "organizations_url": "https://api.github.com/users/josevalim/orgs",
                "repos_url": "https://api.github.com/users/josevalim/repos",
                "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
                "received_events_url": "https://api.github.com/users/josevalim/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 207979,
                    "node_id": "MDU6TGFiZWwyMDc5Nzk=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Chore",
                    "name": "Kind:Chore",
                    "color": "fbca04",
                    "default": false,
                    "description": null
                },
                {
                    "id": 2660471585,
                    "node_id": "MDU6TGFiZWwyNjYwNDcxNTg1",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Elixir%20(checker)",
                    "name": "App:Elixir (checker)",
                    "color": "CCCCCC",
                    "default": false,
                    "description": ""
                }
            ],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/milestones/33",
                "html_url": "https://github.com/elixir-lang/elixir/milestone/33",
                "labels_url": "https://api.github.com/repos/elixir-lang/elixir/milestones/33/labels",
                "id": 10127857,
                "node_id": "MI_kwDOABLXGs4Amonx",
                "number": 33,
                "title": "v1.17",
                "description": "",
                "creator": {
                    "login": "josevalim",
                    "id": 9582,
                    "node_id": "MDQ6VXNlcjk1ODI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/josevalim",
                    "html_url": "https://github.com/josevalim",
                    "followers_url": "https://api.github.com/users/josevalim/followers",
                    "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
                    "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
                    "organizations_url": "https://api.github.com/users/josevalim/orgs",
                    "repos_url": "https://api.github.com/users/josevalim/repos",
                    "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/josevalim/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "open_issues": 0,
                "closed_issues": 5,
                "state": "open",
                "created_at": "2023-10-31T15:45:15Z",
                "updated_at": "2024-05-31T20:38:14Z",
                "due_on": "2024-06-30T07:00:00Z",
                "closed_at": null
            },
            "comments": 3,
            "created_at": "2024-05-21T11:18:46Z",
            "updated_at": "2024-06-01T09:55:51Z",
            "closed_at": "2024-05-31T20:38:14Z",
            "author_association": "MEMBER",
            "active_lock_reason": null,
            "body": null,
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13582/reactions",
                "total_count": 1,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 1,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13582/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13581",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13581/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13581/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13581/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13581",
            "id": 2308045592,
            "node_id": "I_kwDOABLXGs6JkfsY",
            "number": 13581,
            "title": "Add mix profile.tprof",
            "user": {
                "login": "josevalim",
                "id": 9582,
                "node_id": "MDQ6VXNlcjk1ODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/josevalim",
                "html_url": "https://github.com/josevalim",
                "followers_url": "https://api.github.com/users/josevalim/followers",
                "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
                "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
                "organizations_url": "https://api.github.com/users/josevalim/orgs",
                "repos_url": "https://api.github.com/users/josevalim/repos",
                "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
                "received_events_url": "https://api.github.com/users/josevalim/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [
                {
                    "id": 207975,
                    "node_id": "MDU6TGFiZWwyMDc5NzU=",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/Kind:Feature",
                    "name": "Kind:Feature",
                    "color": "0052cc",
                    "default": false,
                    "description": null
                },
                {
                    "id": 10229539,
                    "node_id": "MDU6TGFiZWwxMDIyOTUzOQ==",
                    "url": "https://api.github.com/repos/elixir-lang/elixir/labels/App:Mix",
                    "name": "App:Mix",
                    "color": "CCCCCC",
                    "default": false,
                    "description": null
                }
            ],
            "state": "closed",
            "locked": false,
            "assignee": {
                "login": "sabiwara",
                "id": 11598866,
                "node_id": "MDQ6VXNlcjExNTk4ODY2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11598866?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/sabiwara",
                "html_url": "https://github.com/sabiwara",
                "followers_url": "https://api.github.com/users/sabiwara/followers",
                "following_url": "https://api.github.com/users/sabiwara/following{/other_user}",
                "gists_url": "https://api.github.com/users/sabiwara/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/sabiwara/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/sabiwara/subscriptions",
                "organizations_url": "https://api.github.com/users/sabiwara/orgs",
                "repos_url": "https://api.github.com/users/sabiwara/repos",
                "events_url": "https://api.github.com/users/sabiwara/events{/privacy}",
                "received_events_url": "https://api.github.com/users/sabiwara/received_events",
                "type": "User",
                "site_admin": false
            },
            "assignees": [
                {
                    "login": "sabiwara",
                    "id": 11598866,
                    "node_id": "MDQ6VXNlcjExNTk4ODY2",
                    "avatar_url": "https://avatars.githubusercontent.com/u/11598866?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/sabiwara",
                    "html_url": "https://github.com/sabiwara",
                    "followers_url": "https://api.github.com/users/sabiwara/followers",
                    "following_url": "https://api.github.com/users/sabiwara/following{/other_user}",
                    "gists_url": "https://api.github.com/users/sabiwara/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/sabiwara/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/sabiwara/subscriptions",
                    "organizations_url": "https://api.github.com/users/sabiwara/orgs",
                    "repos_url": "https://api.github.com/users/sabiwara/repos",
                    "events_url": "https://api.github.com/users/sabiwara/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/sabiwara/received_events",
                    "type": "User",
                    "site_admin": false
                }
            ],
            "milestone": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/milestones/33",
                "html_url": "https://github.com/elixir-lang/elixir/milestone/33",
                "labels_url": "https://api.github.com/repos/elixir-lang/elixir/milestones/33/labels",
                "id": 10127857,
                "node_id": "MI_kwDOABLXGs4Amonx",
                "number": 33,
                "title": "v1.17",
                "description": "",
                "creator": {
                    "login": "josevalim",
                    "id": 9582,
                    "node_id": "MDQ6VXNlcjk1ODI=",
                    "avatar_url": "https://avatars.githubusercontent.com/u/9582?v=4",
                    "gravatar_id": "",
                    "url": "https://api.github.com/users/josevalim",
                    "html_url": "https://github.com/josevalim",
                    "followers_url": "https://api.github.com/users/josevalim/followers",
                    "following_url": "https://api.github.com/users/josevalim/following{/other_user}",
                    "gists_url": "https://api.github.com/users/josevalim/gists{/gist_id}",
                    "starred_url": "https://api.github.com/users/josevalim/starred{/owner}{/repo}",
                    "subscriptions_url": "https://api.github.com/users/josevalim/subscriptions",
                    "organizations_url": "https://api.github.com/users/josevalim/orgs",
                    "repos_url": "https://api.github.com/users/josevalim/repos",
                    "events_url": "https://api.github.com/users/josevalim/events{/privacy}",
                    "received_events_url": "https://api.github.com/users/josevalim/received_events",
                    "type": "User",
                    "site_admin": false
                },
                "open_issues": 0,
                "closed_issues": 5,
                "state": "open",
                "created_at": "2023-10-31T15:45:15Z",
                "updated_at": "2024-05-31T20:38:14Z",
                "due_on": "2024-06-30T07:00:00Z",
                "closed_at": null
            },
            "comments": 0,
            "created_at": "2024-05-21T11:15:32Z",
            "updated_at": "2024-05-27T12:51:31Z",
            "closed_at": "2024-05-27T12:51:30Z",
            "author_association": "MEMBER",
            "active_lock_reason": null,
            "body": "Requires Erlang/OTP 27.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13581/reactions",
                "total_count": 2,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 2,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13581/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        },
        {
            "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13575",
            "repository_url": "https://api.github.com/repos/elixir-lang/elixir",
            "labels_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13575/labels{/name}",
            "comments_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13575/comments",
            "events_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13575/events",
            "html_url": "https://github.com/elixir-lang/elixir/issues/13575",
            "id": 2305663279,
            "node_id": "I_kwDOABLXGs6JbaEv",
            "number": 13575,
            "title": "Cldr fails to compile with Elixir 1.17.0-dev (64d6d3d)",
            "user": {
                "login": "moomerman",
                "id": 23323,
                "node_id": "MDQ6VXNlcjIzMzIz",
                "avatar_url": "https://avatars.githubusercontent.com/u/23323?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/moomerman",
                "html_url": "https://github.com/moomerman",
                "followers_url": "https://api.github.com/users/moomerman/followers",
                "following_url": "https://api.github.com/users/moomerman/following{/other_user}",
                "gists_url": "https://api.github.com/users/moomerman/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/moomerman/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/moomerman/subscriptions",
                "organizations_url": "https://api.github.com/users/moomerman/orgs",
                "repos_url": "https://api.github.com/users/moomerman/repos",
                "events_url": "https://api.github.com/users/moomerman/events{/privacy}",
                "received_events_url": "https://api.github.com/users/moomerman/received_events",
                "type": "User",
                "site_admin": false
            },
            "labels": [],
            "state": "closed",
            "locked": false,
            "assignee": null,
            "assignees": [],
            "milestone": null,
            "comments": 5,
            "created_at": "2024-05-20T10:28:00Z",
            "updated_at": "2024-05-20T11:13:39Z",
            "closed_at": "2024-05-20T11:13:39Z",
            "author_association": "NONE",
            "active_lock_reason": null,
            "body": "### Elixir and Erlang/OTP versions\n\nErlang/OTP 26 [erts-14.2.5] [source] [64-bit] [smp:10:10] [ds:10:10:10] [async-threads:1] [jit] [dtrace]\r\n\r\nElixir 1.17.0-dev (64d6d3d) (compiled with Erlang/OTP 26)\n\n### Operating system\n\nmacOS Sonoma 14.5 (23F79)\n\n### Current behavior\n\nOur application fails to compile on 1.17-dev since 64d6d3d.\r\n\r\n```\r\ndefmodule App.Cldr do\r\n  @moduledoc \"\"\"\r\n  A config module for Cldr.\r\n  \"\"\"\r\n\r\n  use Cldr,\r\n    locales: [\"en\"],\r\n    default_locale: \"en\",\r\n    providers: [Cldr.List, Cldr.Number, Cldr.Unit, Cldr.DateTime]\r\nend\r\n```\r\n\r\n```\r\n~/wo/7s/phoenix spike-drawer-panel 7.6s | 1 » mix compile\r\nCompiling 378 files (.ex)\r\nGenerating App.Cldr for 2 locales named [:en, :und] with a default locale named :en\r\n\r\n== Compilation error in file lib/app/cldr.ex ==\r\n** (ArgumentError) errors were found at the given arguments:\r\n\r\n  * 3rd argument: not a list\r\n\r\n    (stdlib 5.2.3) :lists.keyfind(2, 1, false)\r\n    (elixir 1.17.0-dev) src/elixir_dispatch.erl:330: :elixir_dispatch.is_import/2\r\n    (elixir 1.17.0-dev) src/elixir_dispatch.erl:301: :elixir_dispatch.find_import_by_name_arity/4\r\n    (elixir 1.17.0-dev) src/elixir_dispatch.erl:164: :elixir_dispatch.expand_import/7\r\n    (elixir 1.17.0-dev) src/elixir_dispatch.erl:127: :elixir_dispatch.dispatch_import/6\r\n    (ex_cldr 2.38.1) /Users/richard/workspace/7sage/phoenix/lib/app/cldr.ex:1: Cldr.Backend.Compiler.__before_compile__/1\r\n```\r\n\r\nIf this is a genuine bug with Cldr I will follow up with them.\n\n### Expected behavior\n\nExpected it to compile, compiles fine with Elixir 1.17-dev d11b41f65 and before.",
            "reactions": {
                "url": "https://api.github.com/repos/elixir-lang/elixir/issues/13575/reactions",
                "total_count": 0,
                "+1": 0,
                "-1": 0,
                "laugh": 0,
                "hooray": 0,
                "confused": 0,
                "heart": 0,
                "rocket": 0,
                "eyes": 0
            },
            "timeline_url": "https://api.github.com/repos/elixir-lang/elixir/issues/13575/timeline",
            "performed_via_github_app": null,
            "state_reason": "completed",
            "score": 1.0
        }
    ]
}